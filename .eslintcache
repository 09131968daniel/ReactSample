[{"C:\\Users\\dcons\\my_git_repos\\counter\\src\\index.js":"1","C:\\Users\\dcons\\my_git_repos\\counter\\src\\App.js":"2","C:\\Users\\dcons\\my_git_repos\\counter\\src\\reportWebVitals.js":"3","C:\\Users\\dcons\\my_git_repos\\counter\\src\\LoginForm.jsx":"4","C:\\Users\\dcons\\my_git_repos\\counter\\src\\registerForm.jsx":"5","C:\\Users\\dcons\\my_git_repos\\counter\\src\\loginForm.jsx":"6","C:\\Users\\dcons\\my_git_repos\\counter\\src\\users.jsx":"7","C:\\Users\\dcons\\my_git_repos\\counter\\src\\navBar.jsx":"8","C:\\Users\\dcons\\my_git_repos\\counter\\src\\home.jsx":"9","C:\\Users\\dcons\\my_git_repos\\counter\\src\\notFound.jsx":"10","C:\\Users\\dcons\\my_git_repos\\counter\\src\\userForm.jsx":"11","C:\\Users\\dcons\\my_git_repos\\counter\\src\\protectedRoute.jsx":"12","C:\\Users\\dcons\\my_git_repos\\counter\\src\\counter.jsx":"13"},{"size":638,"mtime":1609555026334,"results":"14","hashOfConfig":"15"},{"size":1155,"mtime":1609742099423,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1617,"mtime":1609395333396,"results":"18","hashOfConfig":"15"},{"size":3778,"mtime":1609731789090,"results":"19","hashOfConfig":"15"},{"size":2478,"mtime":1609790206565,"results":"20","hashOfConfig":"15"},{"size":1972,"mtime":1609727387773,"results":"21","hashOfConfig":"15"},{"size":1197,"mtime":1609719226774,"results":"22","hashOfConfig":"15"},{"size":129,"mtime":1609557390807,"results":"23","hashOfConfig":"15"},{"size":164,"mtime":1609559561631,"results":"24","hashOfConfig":"15"},{"size":2647,"mtime":1609729571209,"results":"25","hashOfConfig":"15"},{"size":489,"mtime":1609657009183,"results":"26","hashOfConfig":"15"},{"size":610,"mtime":1609741888363,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1o8eybm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\dcons\\my_git_repos\\counter\\src\\index.js",[],["59","60"],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\App.js",["61","62"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport LoginForm from './loginForm'\nimport RegisterForm from './registerForm'\nimport Users from './users'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport NavBar from './navBar'\nimport Home from './home'\nimport NotFound from './notFound'\nimport UserForm from './userForm'\nimport ProtectedRoute from './protectedRoute'\nimport Counter from './counter'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n     \n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/users/:id\" component={UserForm} />\n            <ProtectedRoute path=\"/users\" component={Users} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/logout\"  to =\"/login\"  />\n            <ProtectedRoute path=\"/\" exact component={Home} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n    export default App;","C:\\Users\\dcons\\my_git_repos\\counter\\src\\reportWebVitals.js",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\LoginForm.jsx",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\registerForm.jsx",["63"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\n class RegisterForm  extends Component {\r\n     constructor(props) {\r\n       super()\r\n         this.state = {\r\n            registerUser: {id:'',username: \"\",password: \"\",name: \"\",email:\"\"},\r\n            errors: {}\r\n             }\r\n     }\r\n     \r\n    \r\n     handleChange = e => {\r\n        \r\n         const registerUser = { ...this.state.registerUser }\r\n         registerUser[e.currentTarget.name]=e.currentTarget.value\r\n         this.setState({registerUser})\r\n     }\r\n     handleSubmit=async (e) =>{\r\n         e.preventDefault()\r\n         const errors = this.validate();\r\n         this.setState({ errors: errors || {} })\r\n\r\n         \r\n         if (errors !==null) return;\r\n         \r\n         const response = await axios.post('http://localhost:9001/user/new', this.state.registerUser)\r\n         \r\n         this.props.history.push(\"/login\") \r\n       \r\n    }\r\n         \r\n     validate=()=> {\r\n         const errors = {};\r\n        \r\n         const { username, password, name, email } = this.state.registerUser\r\n       \r\n         if (username.trim() === '')\r\n             errors.username = \"Username is empty\"\r\n         if (password.trim() === '')\r\n             errors.password = \"Password is empty\"\r\n         if (name.trim() === '')\r\n             errors.name = \"Name is empty\"\r\n         if (email.trim() === '')\r\n             errors.email=\"Email is empty!\"\r\n           \r\n         return Object.keys(errors).length === 0 ? null : errors;\r\n     }    \r\n     \r\n     render() {\r\n         const { username, password, name, email } = this.state.registerUser\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h1>Register Form</h1>\r\n                        <br/>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Username</label>\r\n                            <input value={username} onChange={this.handleChange} name=\"username\" type=\"text\" className=\"form-control\" />\r\n                            {this.state.errors.username && <div className=\"alert alert-danger\" >{this.state.errors.username} </div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Password</label>\r\n                            <input value={password} onChange={this.handleChange} name=\"password\" type=\"text\" className=\"form-control\" />\r\n                            {this.state.errors.password && <div className=\"alert alert-danger\" >{this.state.errors.password} </div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Name</label>\r\n                            <input value={name} onChange={this.handleChange} name=\"name\" type=\"text\" className=\"form-control\" />\r\n                            {this.state.errors.name && <div className=\"alert alert-danger\" >{this.state.errors.name} </div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"\">Email</label>\r\n                            <input value={email} onChange={this.handleChange} name=\"email\" type=\"text\" className=\"form-control\" />\r\n                            {this.state.errors.email && <div className=\"alert alert-danger\" >{this.state.errors.email} </div>}\r\n                        </div>\r\n                        {this.state.registerUser.username}\r\n                        <button  type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                    </form>\r\n                </div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RegisterForm","C:\\Users\\dcons\\my_git_repos\\counter\\src\\loginForm.jsx",["64"],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\users.jsx",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\navBar.jsx",["65","66"],"import React, { Component } from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    return ( \r\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n       <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n       <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/login\">Login <span className=\"sr-only\">(current)</span></NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/users\">Users</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/logout\">LogOut</NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n    \r\n     );\r\n}\r\n \r\nexport default NavBar;","C:\\Users\\dcons\\my_git_repos\\counter\\src\\home.jsx",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\notFound.jsx",["67"],"import React, { Component } from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <h1>Page does not exist!</h1>\r\n    );\r\n}\r\n \r\nexport default NotFound;","C:\\Users\\dcons\\my_git_repos\\counter\\src\\userForm.jsx",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\protectedRoute.jsx",[],"C:\\Users\\dcons\\my_git_repos\\counter\\src\\counter.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":15},{"ruleId":"72","severity":1,"message":"77","line":28,"column":16,"nodeType":"74","messageId":"75","endLine":28,"endColumn":24},{"ruleId":"72","severity":1,"message":"78","line":25,"column":19,"nodeType":"74","messageId":"75","endLine":25,"endColumn":25},{"ruleId":"72","severity":1,"message":"79","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"80","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"79","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'response' is assigned a value but never used.","'result' is assigned a value but never used.","'Component' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]